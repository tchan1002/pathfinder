// ---------- Generators & datasource ----------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------- Models ----------
model Site {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  domain    String   @unique
  startUrl  String?
  pages     Page[]
}

model Page {
  id              String    @id @default(cuid())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  siteId          String
  url             String
  urlNormalized   String
  title           String?
  metaDescription String?
  content         String?
  contentHash     String?
  lastCrawledAt   DateTime?

  site      Site       @relation(fields: [siteId], references: [id], onDelete: Cascade)
  snapshots Snapshot[]
  summaries Summary[]

  // ðŸ‘‡ back relation for Embedding
  embeddings Embedding[]

  @@unique([siteId, urlNormalized])
  @@index([siteId])
}

model Snapshot {
  id             String   @id @default(cuid())
  pageId         String
  createdAt      DateTime @default(now())
  screenshotPath String?
  page           Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)
}

model Summary {
  id        String   @id @default(cuid())
  pageId    String
  createdAt DateTime @default(now())
  text      String
  textHash  String
  model     String?
  page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@unique([pageId, textHash])
}

model Embedding {
  id     String @id @default(cuid())
  pageId String
  page   Page   @relation(fields: [pageId], references: [id], onDelete: Cascade)

  content   String
  vector    Unsupported("vector(384)") // pgvector column
  createdAt DateTime                   @default(now())

  @@index([pageId])
}
