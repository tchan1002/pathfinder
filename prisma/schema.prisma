// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Site {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  domain     String   @unique
  startUrl   String?
  pages      Page[]
}

model Page {
  id              String      @id @default(cuid())
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  siteId          String
  url             String
  urlNormalized   String
  title           String?
  metaDescription String?
  content         String?
  contentHash     String?
  lastCrawledAt   DateTime?
  site            Site        @relation(fields: [siteId], references: [id], onDelete: Cascade)
  snapshots       Snapshot[]
  summaries       Summary[]

  @@unique([siteId, urlNormalized])
  @@index([siteId])
}

model Snapshot {
  id             String   @id @default(cuid())
  pageId         String
  createdAt      DateTime @default(now())
  screenshotPath String?
  page           Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)
}

model Summary {
  id        String   @id @default(cuid())
  pageId    String
  createdAt DateTime @default(now())
  text      String
  textHash  String
  model     String?
  page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@unique([pageId, textHash])
}

// Embeddings removed for basic MVP
